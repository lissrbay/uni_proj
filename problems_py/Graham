#работает, но медленно
class Pair:
    def __init__(self, a, b):
        self.x = a
        self.y = b

def slt(a, b, c):
    return a.x * (b.y - c.y) + b.x * (c.y - a.y) + c.x * (a.y - b.y) < 0;

def sgt(a, b, c):
    return a.x * (b.y - c.y) + b.x * (c.y - a.y) + c.x * (a.y - b.y) > 0;

p = list()
s = set()
def cin():
    f = open('hull.in')
    n = int(f.readline())
    for i in range(n):
        a, b = map(int, (f.readline()).split())
        c = (a, b)        
        if not c in s:
            p.append(Pair(a, b))
        s.add(c)
    f.close()
        
def solve():
    p.sort(key = lambda point: (point.x, point.y))
    p1 = p[0]
    p2 = p[-1]
    v1 = [p1]
    v2 = [p1]
    for i in range(1, len(p)):
        if i == len(p) - 1 or slt(p1, p[i], p2):
            while(len(v1) >= 2 and not slt(v1[-2], v1[-1], p[i])):
                v1.pop()
            v1.append(p[i])
        if i == len(p) - 1 or sgt(p1, p[i], p2):
            while (len(v2) >= 2 and not sgt(v2[-2], v2[-1], p[i])):
                v2.pop()
            v2.append(p[i])
    p.clear();
    
    
    for i in range(len(v1)):
        p.append(v1[i])
    for i in range(len(v2) - 2, 0, -1):
        p.append(v2[i])
    
def output():       
    f = open('hull.out', 'w')
    f.write(str(len(p)) + '\n')
    for i in range(len(p)):
        f.write(str(p[i].x) + ' ' + str(p[i].y) + '\n')
    f.close()
        
cin()
solve()
output()
